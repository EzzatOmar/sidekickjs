<!-- This example requires Tailwind CSS v2.0+ -->
<!--
  Custom select controls like this require a considerable amount of JS to implement from scratch. We're planning
  to build some low-level libraries to make this easier with popular frameworks like React, Vue, and even Alpine.js
  in the near future, but in the mean time we recommend these reference guides when building your implementation:

  https://www.w3.org/TR/wai-aria-practices/#Listbox
  https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html
-->
<!-- This example requires alpine.js -->
<!--
  vars: 
    items: ["Item1", "Item2", ...]
    defaultItem?: "Item2"
-->
{{! might need $el.scrollIntoView() for larger lists}}

<div class="mt-1 relative cursor-pointer" x-data="{ open: false, selected: '{{defaultItem}}', highlighted: '{{defaultItem}}', items: [{{#items}}'{{.}}',{{/items}}] }"
    x-on:keydown.arrow-down="
    if(!highlighted) {
      highlighted = items[0];
    } else {
      let index = items.findIndex(x => x === highlighted);
      let next = items[index + 1];
      if(!!next) {
        highlighted = next;
      } else {
        highlighted = items[0];
      }
    }
    "
    x-on:keydown.arrow-up="
    if(!highlighted) {
      highlighted = items[items.length -1];
    } else {
      let index = items.findIndex(x => x === highlighted);
      let next = items[index - 1];
      if(!!next) {
        highlighted = next;
      } else {
        highlighted = items[items.length -1];
      }
    }
    "
    x-on:keydown.enter="if(!!highlighted) selected = highlighted" >
  <button type="button" aria-haspopup="listbox" aria-expanded="true" aria-labelledby="listbox-label" 
    @click="open = !open"
    x-on:keydown.escape="open = false"
    class="relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
    <template x-if="!!selected"><span class="block truncate" x-text="selected"></span></template>
    <template x-if="!selected"><span class="block truncate text-gray-500">-- Select Schema</span></template>
    
      
    
    <span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
      <!-- Heroicon name: selector -->
      <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </span>
  </button>

  <!--
    Select popover, show/hide based on select state.

    Entering: ""
      From: ""
      To: ""
    Leaving: "transition ease-in duration-100"
      From: "opacity-100"
      To: "opacity-0"
  -->
  <div class="absolute mt-1 w-full rounded-md bg-white shadow-lg"
    x-show="open"
    x-ref="itemContainer"
    @click.away="open = false; setTimeout(_ => highlighted = selected, 200);"
    x-on:keydown.escape="open = false"
    x-transition:leave="transition ease-in duration-100"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0">
    <ul tabindex="-1" role="listbox" aria-labelledby="listbox-label" aria-activedescendant="listbox-item-3" class="max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm">
      <!--
        Select option, manage highlight styles based on mouseenter/mouseleave and keyboard navigation.

        Highlighted: "text-white bg-indigo-600", Not Highlighted: "text-gray-900"
      -->
      {{#items}}
      <li role="option" 
          class="select-none relative py-2 pl-8 pr-4"
          :class="{ 'text-white bg-indigo-600': highlighted === '{{.}}' }"
          :class="{ 'text-gray-900': highlighted !== '{{.}}' }"
          {{! x-ref="highlighted !== '{{.}}'?'highlighted-item':'not-highlighted-item'"  }}
          x-on:mouseenter="highlighted = '{{.}}'"
          x-on:click="selected = '{{.}}'">
        <!-- Selected: "font-semibold", Not Selected: "font-normal" -->
        <span class="font-normal block truncate"
              :class="{ 'font-semibold': highlighted === '{{.}}' }"
              :class="{ 'font-normal': highlighted !== '{{.}}' }">
          {{.}}
        </span>

        <!--
          Checkmark, only display for selected option.

          Highlighted: "text-white", Not Highlighted: "text-indigo-600"
        -->
        <span class="absolute inset-y-0 left-0 flex items-center pl-1.5"
              :class="{ 'text-white': highlighted === '{{.}}' }"
              :class="{ 'text-indigo-600': highlighted !== '{{.}}' }"
              x-show="selected === '{{.}}'">
          <!-- Heroicon name: check -->
          <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
        </span>
      </li>
      {{/items}}


      <!-- More options... -->
    </ul>
  </div>
</div>


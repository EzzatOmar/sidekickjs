version: "3.7"
services:
  web:
    image: node
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - 3000:3000
    volumes:
      - .:/sidekick
    networks:
      - sidekick
    command: sh -c 'cd /sidekick && node ./dist/index.js'
        #command: bash -c 'base64'
  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=psqlpw123
      - POSTGRES_USER=sidekick_admin
      - POSTGRES_DB=sidekick
      - POSTGRES_HOST=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    logging:
      driver: json-file
      options:
        max-size: "10M"
        max-file: "10"
    volumes:
      - ./docker/pgdata:/var/lib/postgresql/data/pgdata
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks: 
      - sidekick
 #rest:
 #  image: postgrest/postgrest
 #  ports:
 #    - "3100:3000"
 #  environment:
 #    PGRST_DB_URI: postgres://sidekick_api:todoChangeMe@postgres:5432/sidekick
 #    PGRST_DB_SCHEMA: simple_ab
 #    PGRST_DB_ANON_ROLE: sidekick_public #In production this role should not be the same as the one used for the connection
 #    PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3100"
 #    PGRST_JWT_SECRET: "SECRET_FOR_JWTSECRET_FOR_JWTSECRET_FOR_JWT"
 #    PGRST_JWT_AUD: "postgraphile"
 #  depends_on:
 #    - postgres
 #  networks: 
 #    - sidekick

networks:
  sidekick:
    external: true

# Table definition
namespace: sidekick
type: DBConfig
table_name: users_password
depends_on:
  - users
create_stmt: >
  CREATE TABLE IF NOT EXISTS users_password (
    id Integer PRIMARY KEY REFERENCES users(id) ON DELETE CASCADE,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
    password_hash CHAR(60),
    password_recovery_code UUID,
    password_recovery_code_updated_at TIMESTAMP
    );
trigger_stmt:
  - DROP TRIGGER IF EXISTS update_users_password_updated_at ON users_password;
    CREATE TRIGGER update_users_password_updated_at BEFORE UPDATE ON users_password
    FOR EACH ROW EXECUTE PROCEDURE updated_at_trigger();
description:
  table: >
    Extends the base user table by the concept of passwords. Each password is stored as a hash and can have a recovery code.
    It is possible to have multiple passwords per user.
  columns:
    id: Auto incremental integer
    created_at: Timestamp when the user was created
    updated_at: Timestamp when the last modification has happend
    password_hash: Hash value 60 character in length
    password_recovery_code: An uuid which will should always be null unless a recovery has been issued
    password_recovery_code_updated_at: Timestamp when the recovery uuid was last updated